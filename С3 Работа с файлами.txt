import os
print(os.getcwd()) # C:\Users\user\PycharmProjects\pythonProject3.8 b1.6\C3\3.3.7
os.walk(os.getcwd()) # создаст список всех  каталагов и файлов относительно getcwd()
os.chdir("..")  # подняться на один уровень выше

------
# список файлов и директорий в папке
import os
print(os.listdir())  # ['SnapchatLoader', 'FBLoader', 'tmp.py', '.gitignore', 'venv', '.git']
if 'tmp.py' not in os.listdir():
   print("Файл отсутствует в данной директории")
-----------

---------------
"""Сделайте функцию, которая принимает от пользователя путь и выводит всю информацию о содержимом этой папки.
Для реализации используйте функцию встроенного модуля os.walk(). Если путь не указан, то сравнение начинается с
текущей директории."""

#
#---------
# import os
# def path_a (path = os.getcwd()):
#     path_ = os.walk(path)
#     for i in path_:
#         print(i)#
# path_a("D:\Games\ELDEN RING\Game")
----------
import os


def walk_desc(path=None):
    start_path = path if path is not None else os.getcwd()

    for root, dirs, files in os.walk(start_path):
        print("Текущая директория", root)
        print("---")

        if dirs:
            print("Список папок", dirs)
        else:
            print("Папок нет")
        print("---")

        if files:
            print("Список файлов", files)
        else:
            print("Файлов нет")
        print("---")

        if files and dirs:
            print("Все пути:")
        for f in files:
            print("Файл ", os.path.join(root, f))
        for d in dirs:
            print("Папка ", os.path.join(root, d))
        print("===")


walk_desc()
--------------------------
f = open('test.txt', 'w', encoding='utf8')
# Запишем в файл строку
f.write("This is a test string\n")
f.write("This is a new string\n")


f = open('test.txt', 'a', encoding='utf8')  # открываем файл на дозапись
sequence = ["other string\n", "123\n", "test test\n"]
f.writelines(sequence) # берёт строки из sequence и записывает в файл (без переносов)
f.close()


f = open('test.txt', 'r', encoding='utf8')
print(f.readlines())  # считывает все строки в список и возвращает список
f.close()

#Метод f.readline() возвращает строку (символы от текущей позиции до символа переноса строки):
f = open('test.txt', 'r', encoding='utf8')

print(f.readline())  # This is a test string
print(f.read(4))  # This
print(f.readline())  #  is a new string
f.close()
----------
f = open('path/to/file', 'filemode', encoding='utf8')
r — открыть на чтение (по умолчанию);
w — перезаписать и открыть на запись (если файла нет, то он создастся);
x — создать и открыть на запись (если уже есть — исключение);
a — открыть на дозапись (указатель будет поставлен в конец);
t — открыть в текстовом виде (по умолчанию);
b — открыть в бинарном виде.

# В блоке менеджера контекста открытый файл «жив» и с ним можно работать, при выходе из блока файл закрывается.
with open("test.txt", 'rb') as f:
    a = f.read(10)
    b = f.read(23)
f.read(3)  # Error!