import os
print(os.getcwd()) # C:\Users\user\PycharmProjects\pythonProject3.8 b1.6\C3\3.3.7
os.walk(os.getcwd()) # создаст список всех  каталагов и файлов относительно getcwd()

---------------
"""Сделайте функцию, которая принимает от пользователя путь и выводит всю информацию о содержимом этой папки.
Для реализации используйте функцию встроенного модуля os.walk(). Если путь не указан, то сравнение начинается с
текущей директории."""

#
#---------
# import os
# def path_a (path = os.getcwd()):
#     path_ = os.walk(path)
#     for i in path_:
#         print(i)#
# path_a("D:\Games\ELDEN RING\Game")
----------
import os


def walk_desc(path=None):
    start_path = path if path is not None else os.getcwd()

    for root, dirs, files in os.walk(start_path):
        print("Текущая директория", root)
        print("---")

        if dirs:
            print("Список папок", dirs)
        else:
            print("Папок нет")
        print("---")

        if files:
            print("Список файлов", files)
        else:
            print("Файлов нет")
        print("---")

        if files and dirs:
            print("Все пути:")
        for f in files:
            print("Файл ", os.path.join(root, f))
        for d in dirs:
            print("Папка ", os.path.join(root, d))
        print("===")


walk_desc()
--------------------------
f = open('test.txt', 'w', encoding='utf8')
# Запишем в файл строку
f.write("This is a test string\n")
f.write("This is a new string\n")


f = open('test.txt', 'a', encoding='utf8')  # открываем файл на дозапись
sequence = ["other string\n", "123\n", "test test\n"]
f.writelines(sequence) # берёт строки из sequence и записывает в файл (без переносов)
f.close()


f = open('test.txt', 'r', encoding='utf8')
print(f.readlines())  # считывает все строки в список и возвращает список
f.close()

#Метод f.readline() возвращает строку (символы от текущей позиции до символа переноса строки):
f = open('test.txt', 'r', encoding='utf8')

print(f.readline())  # This is a test string
print(f.read(4))  # This
print(f.readline())  #  is a new string
f.close()
----------