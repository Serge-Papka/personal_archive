import time


# Найдите среднее время выполнения для 100 выполнений каждой функции. Задание 4.5.1

def decorator_time(fn):
    def wrapper():
        # print(f"Запустилась функция {fn}")
        t0 = time.time()
        result = fn()
        dt = time.time() - t0
        # print(f"Функция выполнилась. Время: {dt:.10f}")
        return dt # задекорированная функция будет возвращать время работы

    return wrapper


def pow_2():
    return 10000000 ** 2


def in_build_pow():
    return pow(10000000, 2)


pow_2 = decorator_time(pow_2)
in_build_pow = decorator_time(in_build_pow)

mean_pow_2 = 0
mean_in_build_pow = 0

for i in range(100):
    mean_pow_2 += pow_2()
    mean_in_build_pow += in_build_pow()

print(f"Функция {pow_2} выполнялась 100 раз. Среднее время: {mean_pow_2 / 100:.10f}")
print(f"Функция {in_build_pow} выполнялась 100 раз. Среднее время: {mean_in_build_pow / 100:.10f}")

pow_2()
# Запустилась функция <function pow_2 at 0x7f938401b158>
# Функция выполнилась. Время: 0.0000011921

in_build_pow()
# Запустилась функция <function in_build_pow at 0x7f938401b620>
# Функция выполнилась. Время: 0.0000021458


-------------------------------------------------------------------
#Вот универсальный шаблон для декоратора:
def my_decorator(fn):
    print("Этот код будет выведен один раз в момент декорирования функции")
    def wrapper(*args, **kwargs):
        print('Этот код будет выполняться перед каждым вызовом функции')
        result = fn(*args, **kwargs)
        print('Этот код будет выполняться после каждого вызова функции')
        return result
    return wrapper

-----------------------

@my_decorator
def my_function():
    pass
При этом будет происходить всё то же самое, аналогичное.

my_function = my_decorator(my_function)


------------------

def counter(func):
   count = 0
   def wrapper(*args, **kwargs):
       nonlocal count
       func(*args, **kwargs)
       count += 1
       print(f"Функция {func} была вызвана {count} раз")
   return wrapper

# @counter
def say_word(word):
    print(word)

ttrr = counter(say_word) # эта строчка равнасильна @counter

ttrr("Oo!!!")
# Oo!!!
# Функция <function say_word at 0x7f93836d47b8> была вызвана 1 раз

ttrr("Oo!!!")
# Oo!!!
# Функция <function say_word at 0x7f93836d47b8> была вызвана 2 раз