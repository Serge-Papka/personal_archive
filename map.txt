# map + filter
some_list = [i - 10 for i in range(20)]
def pow2(x): return x**2
def positive(x): return x > 0

print(some_list)
print(list(map(pow2, filter(positive, some_list))))
То же самое через list comprehension.

[i**2 for i in some_list if i > 0]
Возникает вопрос, когда использовать map, а когда list comprehension? Как оговаривалось ранее, map работает по принципу ленивых вычислений, а list comprehension возвращает результат вычислений сразу.

map(func, list1)  # итератор, но никаких вычислений не будет произведено
list(map(...))  # только здесь появляется объект

[func(i) for i in list1]  # сразу готовый объект


[func(i) for i in list1] == list(map(func, list1))  # результат один и тот же